[project]
name = "gemini-supply"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{name = "Scott Hyndman", email = "scotty.hyndman@gmail.com"}]
requires-python = ">=3.13"
dependencies = [
    "better-exceptions>=0.3.3",
    "camoufox[geoip]>=0.4.11",
    "clypi>=1.8.1",
    "google-genai>=1.40.0",
    "httpx>=0.28.1",
    "playwright==1.52.0",
    "pydantic==2.11.4",
    "pydantic-ai>=1.1.0",
    "python-telegram-bot>=21.6",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pyyaml>=6.0.3",
    "rich>=14.2.0",
    "termcolor==3.1.0",
    "playwright-captcha>=0.1.1",
    "logfire>=4.13.2",
    "opentelemetry-instrumentation-google-genai>=0.4b0",
    "term-image>=0.7.2",
    "pillow>=10.4.0",
]

[project.scripts]
gemini-supply = "gemini_supply.__main__:main"
gemini-supply-auth-scratch = "gemini_supply.auth_scratch:main"

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[tool.ruff]
line-length = 100
indent-width = 2
target-version = "py313"

[tool.ruff.lint]
extend-select = [
    "B009",   # get-attr-with-constant
    "ANN401", # any-type
    "PYI032", # any-eq-ne-annotation
]

[tool.pyright]
reportUnknownMemberAccess = "error"
reportUnknownVariableType = "error"
reportUnknownArgumentType = "error"
reportUnknownParameterType = "error"
reportUnsupportedDunderAll = "error"
venvPath = "."
venv = ".venv"

[dependency-groups]
dev = ["pytest-xdist>=3.8.0"]
